


; rt->shapes[i++] = create_sphere((t_sub_parser){.center = (t_vec3){-6., -5., 0.}, .color = BROWN_COLOR, .rad = 1.5, .specular = 10.});
[sphere]
center = -6., -5., 0.
color = 255, 135, 0
rad = 1.5
specular = 10.

; rt->shapes[i++] = create_sphere((t_sub_parser){.center = (t_vec3){6., -5., 0.}, .color = BROWN_COLOR, .rad = 1.5, .specular = 10.});
[sphere]
center = 6., -5., 0.
color =255, 135, 0
rad = 1.5
specular = 10.

; rt->shapes[i++] = create_sphere((t_sub_parser){.center = (t_vec3){-6., 5., 0.}, .color = BROWN_COLOR, .rad = 1.5, .specular = 10.});
[sphere]
center = -6., 5., 0.
color = 255, 135, 0
rad = 1.5
specular = 10.

; rt->shapes[i++] = create_sphere((t_sub_parser){.center = (t_vec3){6., 5., 0.}, .color = BROWN_COLOR, .rad = 1.5, .specular = 10.});
[sphere]
center = 6., 5., 0.
color = 255, 135, 0
rad = 1.5
specular = 10.

; rt->shapes[i++] = create_sphere((t_sub_parser){.center = (t_vec3){-6., -5., 18.}, .color = BROWN_COLOR, .rad = 1.5, .specular = 10.});
[sphere]
center = -6., -5., 18.
color = 255, 135, 0
rad = 1.5
specular = 10.

; rt->shapes[i++] = create_sphere((t_sub_parser){.center = (t_vec3){6., -5., 18.}, .color = BROWN_COLOR, .rad = 1.5, .specular = 10.});
[sphere]
center = 6., -5., 18.
color = 255, 135, 0
rad = 1.5
specular = 10.
; rt->shapes[i++] = create_sphere((t_sub_parser){.center = (t_vec3){-6., 5., 18.}, .color = BROWN_COLOR, .rad = 1.5, .specular = 10.});
[sphere]
center = -6., 5., 18.
color = 255, 135, 0
rad = 1.5
specular = 10.
; rt->shapes[i++] = create_sphere((t_sub_parser){.center = (t_vec3){6., 5., 18.}, .color = BROWN_COLOR, .rad = 1.5, .specular = 10.});
[sphere]
center = 6., 5., 18.
color = 255, 135, 0
rad = 1.5
specular = 10.
; rt->shapes[i++] = create_sphere((t_sub_parser){.center = (t_vec3){-2., 0., 0.}, .color = RED_COLOR, .rad = 1.5, .specular = 10.});
[sphere]
center = -2., 0., 0.
color = 255, 0, 0
rad = 1.5
specular = 10.

; rt->shapes[i++] = create_cilinder((t_sub_parser){.center = (t_vec3){6., 0., 18.}, .rad = 1., .axis = (t_vec3){0., 1., 0.}, .color = L_GREEN_COLOR, .specular = 10.});
[cylinder]
center = 6., 0., 18.
axis = 0., 1., 0.
color = 0, 255, 255 
rad = 1.
specular = 10.
; rt->shapes[i++] = create_cilinder((t_sub_parser){.center = (t_vec3){-6., 0., 18.}, .rad = 1., .axis = (t_vec3){0., 1., 0.}, .color = L_GREEN_COLOR, .specular = 10.});
[cylinder]
center = -6., 0., 18.
axis = 0., 1., 0.
color = 0, 255, 255
rad = 1.
specular = 10.
; rt->shapes[i++] = create_cilinder((t_sub_parser){.center = (t_vec3){6., 0., 0.}, .rad = 1., .axis = (t_vec3){0., 1., 0.}, .color = L_GREEN_COLOR, .specular = 10.});
[cylinder]
center = 6., 0., 0.
axis = 0., 1., 0.
color = 0, 255, 0 
rad = 1.
specular = 10.
; rt->shapes[i++] = create_cilinder((t_sub_parser){.center = (t_vec3){-6., 0., 0.}, .rad = 1., .axis = (t_vec3){0., 1., 0.}, .color = L_GREEN_COLOR, .specular = 10.});
[cylinder]
center = -6., 0., 0.
axis = 0., 1., 0.
color = 0, 255, 0 
rad = 1.
specular = 10.

rt->shapes[i++] = create_plane((t_sub_parser){.center = (t_vec3){0., 1., 29.}, .color = BLUE_COLOR, .norm = (t_vec3){0., 0., -1.}, .specular = 0});
[plane]
center = 0., 1., 29.
color = 0, 0, 255
rad = 800
specular = 0
norm = 0., 0., -1.
; rt->shapes[i++] = create_plane((t_sub_parser){.center = (t_vec3){0., -5., 0.}, .color = PURPLE_COLOR, .norm = (t_vec3){0., 1., 0.}, .specular = 0});
[plane]
center = 0., -5., 0.
color = 255, 0, 255
rad = 800
specular = 0
norm = 0., 1., 0.
; rt->shapes[i++] = create_plane((t_sub_parser){.center = (t_vec3){0., 5., 0.}, .color = YELLOW_COLOR, .norm = (t_vec3){0., -1., 0.}, .specular = 0});
[plane]
center = 0., 5., 0.
color = 255, 255, 0
rad = 800
specular = 0
norm = 0., -1., 0.
; rt->shapes[i++] = create_cone((t_sub_parser){.center = (t_vec3){0., 0., 0.}, .angle = -1000, .axis = (t_vec3){0., 1., 0.}, .color = WHIGHT_COLOR, .specular = 10.});
[cone]
center = 0., 0., 0.
axis = 0., 1., 0.
color = 255, 255, 255
angle = -1000
specular = 10.

;rt->light[i++] = create_light_point((t_sub_parser){.opoint = (t_vec3){-20, 3, -20}, .intens = 0.4}, rt->max_light);

; [light]
; opoint = -20., 3., -20.
; intens = 0.4
; on = 1
; type = 2

;rt->light[i++] = create_light_point((t_sub_parser){.opoint = (t_vec3){20, 3, -20}, .intens = 0.5}, rt->max_light);
[light]
opoint = 20., 3., -20.
intens = 0.5
on = 1
type = 2

;rt->light[i++] = create_light_ambient((t_sub_parser){.intens = 0.2}, rt->max_light);
[light]
intens = 0.2
on = 1
type = 1

[cam]
opoint = 0., 0., -20.
rot = 0. , 0., 0.